#!/usr/bin/env python3
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#


import sys

S3SERVER_ENTRY_FORMAT = "    server s3-instance-{1} 0.0.0.0:{0} check    # s3 instance {1}"

def find_s3server_lines(file_path):
    line_numbers = list()

    with open(file_path) as f:
        ln = 0
        is_backend_section = False
        for line in f:
            ln += 1
            stripped_line = line.lstrip()

            #ignore empty lines and comments
            if len(stripped_line) == 0 or stripped_line.startswith("#"):
                continue

            if not line.startswith(" "):
                #next section is found
                if line.startswith("backend app-main"):
                    is_backend_section = True
                else:
                    is_backend_section = False

            if is_backend_section:
                if stripped_line.startswith("server"):
                    line_numbers.append(ln)
    return line_numbers

def patch_file(file_path, lines_for_delete, instance_nr, port_start):
    with open(file_path) as f2:
        ln = 0
        for line in f2:
            ln += 1

            if ln not in lines_for_delete:
                print(line, end="")
            elif ln == lines_for_delete[0]:
                for instance in range(instance_nr):
                    print(S3SERVER_ENTRY_FORMAT.format(port_start, instance + 1))
                    port_start += 1

def main():
    file_path = sys.argv[1]
    instance_nr = int(sys.argv[2])
    port_start = int(sys.argv[3])

    line_numbers = find_s3server_lines(file_path)
    patch_file(file_path, line_numbers, instance_nr, port_start)


if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(e, file=sys.stderr)
        exit(1)
    exit(0)

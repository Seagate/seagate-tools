---
  - name: Compress directory files/webui into files/webui.tar.gz
    archive:
      path: "{{ role_path }}/files/webui"
      dest: "{{ role_path }}/files/webui.tar.gz"
   

  - name: Copy perfline webui scripts
    unarchive:
      src: "{{ role_path }}/files/webui.tar.gz"
      dest: "{{ PERFLINE_DIR }}"
    delegate_to: "client-1"

  - name: Compress directory files/chronometry into files/chronometry.tar.gz
    archive:
      path: "{{ role_path }}/files/chronometry"
      dest: "{{ role_path }}/files/chronometry.tar.gz"
   
  - name: Copy perfline chronometry scripts
    unarchive:
      src: "{{ role_path }}/files/chronometry.tar.gz"
      dest: "{{ PERFLINE_DIR }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"
 
  - name: Compress directory files/chronometry_v2 into files/chronometry_v2.tar.gz
    archive:
      path: "{{ role_path }}/files/chronometry_v2"
      dest: "{{ role_path }}/files/chronometry_v2.tar.gz"

  - name: Copy perfline chronometry_v2 scripts
    unarchive:
      src: "{{ role_path }}/files/chronometry_v2.tar.gz"
      dest: "{{ PERFLINE_DIR }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

  
  - name: Copy perfline.conf file
    copy:
      src: files/perfline.conf
      dest: "{{ PERFLINE_DIR }}"
    delegate_to: "client-1"

  - name: Open port for webui
    firewalld: 
      permanent: yes
      immediate: yes
      port: "{{ item.port }}/{{ item.proto }}"
      state: "{{ item.state }}"
      zone: "{{ item.zone }}"
    delegate_to: "client-1"
    with_items:
       - { port: "{{ perfline_ui_port }}", proto: "tcp", state: "enabled", zone: "management-zone" }
    ignore_errors: yes    


  - name: Install perfline python dependencies
    pip:
      name:
        - huey == 2.3.0
        - plumbum
        - cerberus
        - pandas
        - matplotlib
        - Flask
        - PyYAML
        - Jinja2
        - tqdm
        - iostat-tool
        - peewee
        - graphviz
      executable: pip3
      extra_args: -i https://pypi.org/simple
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

  - name: Install perfline system dependencies
    yum:
      name:
        - ansible
        - sysstat
        - pdsh
        - dstat
        - blktrace
        - iowatcher
        - python3-devel
        - ftp
        - fio
        - iperf
      state: present
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"


  - name: "Coping a block of statement in perfline-ui.service file"
    blockinfile:
      path: /etc/systemd/system/{{ PERFLINE_UI_SERVICE_NAME }}.service
      create: yes
      block: |
                [Unit]
                Description=web ui for perfline
                
                [Service]
                Type=simple
                WorkingDirectory={{ PERFLINE_DIR }}/webui
                ExecStart=/usr/bin/python3.6 {{ PERFLINE_DIR }}/webui/server.py
                
                [Install]
                WantedBy=multi-user.target
    delegate_to: "client-1" 

  - name: "Coping a block of statement in perfline.service file"
    blockinfile:
      path: /etc/systemd/system/{{ PERFLINE_SERVICE_NAME }}.service
      create: yes
      block: |
                [Unit]
                Description=Perfline service
                
                [Service]
                Type=simple
                Restart=always
                WorkingDirectory={{ PERFLINE_DIR }}/wrapper
                ExecStart=/usr/bin/bash {{ PERFLINE_DIR }}/wrapper/run_pl
                
                [Install]
                WantedBy=multi-user.target
    delegate_to: "client-1"

  - name: "Coping a block of statement for {{ PERFLINE_DAEMON_SERVICE_NAME }}.service"
    blockinfile:
      path: /etc/systemd/system/{{ PERFLINE_DAEMON_SERVICE_NAME }}.service
      create: yes
      block: |
                [Unit]
                Description=Perfline daemon service to trigger perfline workloads automatically
                Wants={{ PERFLINE_SERVICE_NAME }}.timer

                [Service]
                Type=oneshot
                WorkingDirectory={{ PERFLINE_DIR }}/wrapper
                ExecStart=/usr/bin/bash {{ PERFLINE_DIR }}/wrapper/perfline_daemon.sh

                [Install]
                WantedBy=multi-user.target
    delegate_to: "client-1"
    when: enable_daemon_service == "yes"

  - name: "Coping a block of statement for {{ PERFLINE_SERVICE_NAME }}.timer"
    blockinfile:
      path: /etc/systemd/system/{{ PERFLINE_SERVICE_NAME }}.timer
      create: yes
      block: |
                [Unit]
                Description=Triggered perfline_daemon based on calendar value
                Requires={{ PERFLINE_DAEMON_SERVICE_NAME }}.service
                
                [Timer]
                Unit={{ PERFLINE_DAEMON_SERVICE_NAME }}.service
                OnCalendar=Fri *-*-* 00:00:00
                
                [Install]
                WantedBy=timers.target
    delegate_to: "client-1"
    when: enable_daemon_service == "yes"

  - name: Start {{ PERFLINE_UI_SERVICE_NAME }} service
    systemd: state=restarted name={{ PERFLINE_UI_SERVICE_NAME }} daemon_reload=yes
    delegate_to: "client-1"

  - name: Start {{ PERFLINE_SERVICE_NAME }} service
    systemd: state=restarted name={{ PERFLINE_SERVICE_NAME }} daemon_reload=yes
    delegate_to: "client-1"

#!/usr/bin/env bash
#
#
# Copyright (c) 2022 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#
# -*- coding: utf-8 -*-


function parse_nodes() {
    for map in $SRV_CLI_MAP; do
        local srv=$(echo $map | awk -F '=' '{print $1}')
        local cli=$(echo $map | awk -F '=' '{print $2}')

        if [[ -n $srv ]]; then
            if [[ -z "$SRV_NODES" ]]; then
                SRV_NODES="$srv"
            else
                SRV_NODES="$SRV_NODES,$srv"
            fi
        fi

        if [[ -n $cli ]]; then
            if [[ -z "$CLI_NODES" ]]; then
                CLI_NODES="$cli"
            else
                CLI_NODES="$CLI_NODES,$cli"
            fi
        fi

    done

    if [[ -n $SRV_NODES ]]; then
        EX_SRV="pdsh -S -w $SRV_NODES"
    else
        EX_SRV="eval"
    fi

    if [[ -n $CLI_NODES ]]; then
        EX_CLI="pdsh -S -w $CLI_NODES"
    else
        EX_CLI="eval"
    fi
}

function cluster_copy()
{
    if [[ -n $SRV_NODES ]]; then
        $EX_SRV scp -r "$1" $(hostname):$2
    else
        eval "local p1=$1"
        eval "local p2=$2"
        cp -r $p1 $p2
    fi
}

function client_copy()
{
    if [[ -n $CLI_NODES ]]; then
        $EX_CLI scp -r "$1" $(hostname):$2
    else
        eval "local p1=$1"
        eval "local p2=$2"
        cp -r $p1 $p2
    fi
}
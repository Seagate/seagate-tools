---
  - name: Compress directory files/webui into files/webui.tar.gz
    archive:
      path: "{{ role_path }}/files/webui"
      dest: "{{ role_path }}/files/webui.tar.gz"
   

  - name: Copy perfline webui scripts
    unarchive:
      src: "{{ role_path }}/files/webui.tar.gz"
      dest: "{{ perfline_dir }}"
    delegate_to: "client-1"

  - name: Compress directory files/chronometry into files/chronometry.tar.gz
    archive:
      path: "{{ role_path }}/files/chronometry"
      dest: "{{ role_path }}/files/chronometry.tar.gz"
   
  - name: Copy perfline chronometry scripts
    unarchive:
      src: "{{ role_path }}/files/chronometry.tar.gz"
      dest: "{{ perfline_dir }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"
 
  - name: Compress directory files/chronometry_v2 into files/chronometry_v2.tar.gz
    archive:
      path: "{{ role_path }}/files/chronometry_v2"
      dest: "{{ role_path }}/files/chronometry_v2.tar.gz"

  - name: Copy perfline chronometry_v2 scripts
    unarchive:
      src: "{{ role_path }}/files/chronometry_v2.tar.gz"
      dest: "{{ perfline_dir }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

  - name: Compress directory files/build_deploy into files/build_deploy.tar.gz
    archive:
      path: "{{ role_path }}/files/build_deploy"
      dest: "{{ role_path }}/files/build_deploy.tar.gz"

  - name: Copy perfline build_deploy scripts
    unarchive:
      src: "{{ role_path }}/files/build_deploy.tar.gz"
      dest: "{{ perfline_dir }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

  - name: copy inventory file to perfline/build_deploy
    copy:
       src: "{{ playbook_dir }}/inventories/perfline_hosts/hosts"
       dest: "{{ perfline_dir }}/build_deploy/hosts"
    delegate_to: "client-1"


#  - name: Open port for webui
#    firewalld: port=8005/tcp zone=public permanent=true state=enabled immediate=yes


  - name: Install perfline python dependencies
    pip:
      name:
        - huey
        - plumbum
        - cerberus
        - pandas
        - matplotlib
        - Flask
        - PyYAML
        - Jinja2
        - tqdm
        - iostat-tool
        - peewee
      executable: pip3
      extra_args: -i https://pypi.org/simple
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

  - name: Install perfline system dependencies
    yum:
      name:
        - ansible
        - sysstat
        - pdsh
        - dstat
        - blktrace
        - iowatcher
        - python3-devel
      state: present
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"

 
  - name: Copy perfline-ui systemd file
    copy:
      src: files/perfline-ui.service
      dest: /etc/systemd/system/perfline-ui.service
    delegate_to: "client-1"

  - name: Copy perfline systemd file
    copy:
      src: files/perfline.service
      dest: /etc/systemd/system/perfline.service
    delegate_to: "client-1"

  - name: Start perfline-ui service
    systemd: state=started name=perfline-ui daemon_reload=yes
    delegate_to: "client-1"

  - name: Start perfline service
    systemd: state=started name=perfline daemon_reload=yes
    delegate_to: "client-1"

#
#
# Copyright (c) 2022 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#
# -*- coding: utf-8 -*-

---
 - name: "[local-pre-req] : Required packages on localhost"
   yum:
      name: expect
      state: present

 - name: "[local-pre-req] : Generate SSH key 'id_rsa' on localhost"
   openssh_keypair:
      path: "~/.ssh/id_rsa_perfline"
      type: rsa
      size: 4096
      state: present
      force: no

 - name: "[local-pre-req] : Enabling Passwordless SSH from perfline master server"
   script: files/passwordless_ssh.sh {{ hostvars[item]['ansible_user'] }} {{ hostvars[item]['ansible_host'] }} {{ cluster_pass }}
   ignore_errors: true
   with_items: "{{ groups['all'] }}"

 - name: "[cluster-pre-req] : Required packages on all servers"
   yum:
      name: expect
      state: present
   delegate_to: "{{ item }}"
   with_items: "{{ groups['all'] }}"

 - name: "[cluster-pre-req] : Generate SSH key 'id_rsa' to all servers"
   openssh_keypair:
      path: "~/.ssh/id_rsa_perfline"
      type: rsa
      size: 4096
      state: present
      force: no
   delegate_to: "{{ item }}"
   with_items: "{{ groups['all'] }}"

 - name: "[client-pre-req] : Enabling Passwordless SSH from cortx client server"
   script: files/passwordless_ssh.sh {{ hostvars[item]['ansible_user'] }} {{ hostvars[item]['ansible_host'] }} {{ cluster_pass }}
   ignore_errors: true
   delegate_to: "client-1"
   with_items: "{{ groups['all'] }}"

 - name: "[servers-pre-req] : Enabling Passwordless SSH from cortx servers to cortx-client"
   script: files/passwordless_ssh.sh {{ hostvars[item]['ansible_user'] }} {{ hostvars['client-1']['ansible_host'] }} {{ cluster_pass }}
   ignore_errors: true
   delegate_to: "{{ item }}"
   with_items: "{{ groups['nodes'] }}"

 - name: "[client-pre-req] : Adding Identityfile on /etc/ssh/ssh_config file"
   lineinfile:
      path: "/etc/ssh/ssh_config"
      line: "\tIdentityFile ~/.ssh/id_rsa_perfline"
   delegate_to: "{{ item }}"
   with_items: "{{ groups['all'] }}"

 - name: "[client-pre-req] : Reloading sshd service"
   systemd: state=reloaded name=sshd
   delegate_to: "{{ item }}"
   with_items: "{{ groups['all'] }}"

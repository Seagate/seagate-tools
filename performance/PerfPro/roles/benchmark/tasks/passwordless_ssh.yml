---
 - name: "[Orchestrator(localhost)] : Installing Required Packages"
   yum:
      name: expect
      state: present

 - name: "[Clients] : Installing Required Packages on Clients"
   yum:
      name: expect
      state: present
   delegate_to: "{{ item }}"
   with_items: "{{ groups['clients'] }}"

 - name: "[Nodes] : Required packages on Nodes"
   yum:
      name: expect
      state: present
   delegate_to: "{{ item }}"
   with_items: "{{ groups['nodes'] }}"
   when: SYSTEM_STATS

 - name: "[Orchestrator(localhost)] : Generating SSH key pair if not exist"
   openssh_keypair:
      path: "~/.ssh/id_rsa"
      type: rsa
      size: 4096
      state: present
      force: no
 
 - name: "[Orchestrator(localhost)] : Enabling Passwordless SSH to Clients"
   script: files/passwordless_ssh.sh {{ hostvars[item]['ansible_user'] }} {{ hostvars[item]['ansible_host'] }} {{ CLUSTER_PASS }}
   ignore_errors: false
   with_items: "{{ groups['clients'] }}"
 
 - name: "[Orchestrator(localhost)] : Enabling Passwordless SSH to Nodes"
   script: files/passwordless_ssh.sh {{ hostvars[item]['ansible_user'] }} {{ hostvars[item]['ansible_host'] }} {{ CLUSTER_PASS }}
   ignore_errors: false
   with_items: "{{ groups['nodes'] }}"
   when: SYSTEM_STATS

 - name: "[Clients] : Generate SSH Key Pair on Clients if not exist"
   openssh_keypair:
      path: "~/.ssh/id_rsa"
      type: rsa
      size: 4096
      state: present
      force: no
   delegate_to: "{{ item }}"
   with_items: "{{ groups['clients'] }}"

 - name: "[Clients] : Enabling Passwordless SSH to Clients"
   script: files/passwordless_ssh.sh {{ hostvars[item[1]]['ansible_user'] }} {{ hostvars[item[1]]['ansible_host'] }} {{ CLUSTER_PASS }}
   ignore_errors: false
   delegate_to: "{{ item[0] }}"
   loop: "{{ groups.clients|product(groups.clients)|list }}"

 - name: "[Nodes] : Generate SSH Key Pair on Nodes if not exist"
   openssh_keypair:
      path: "~/.ssh/id_rsa"
      type: rsa
      size: 4096
      state: present
      force: no
   delegate_to: "{{ item }}"
   with_items: "{{ groups['nodes'] }}"
   when: SYSTEM_STATS

 - name: "[Clients] : Enabling Passwordless SSH to Nodes"
   script: files/passwordless_ssh.sh {{ hostvars[item[1]]['ansible_user'] }} {{ hostvars[item[1]]['ansible_host'] }} {{ CLUSTER_PASS }}
   ignore_errors: false
   delegate_to: "{{ item[0] }}"
   loop: "{{ groups.clients|product(groups.nodes)|list }}"
   when: SYSTEM_STATS
